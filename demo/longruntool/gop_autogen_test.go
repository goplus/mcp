// Code generated by gop (Go+); DO NOT EDIT.

package main

import (
	"github.com/goplus/mcp/mtest"
	"testing"
)

type case_longrun struct {
	mtest.CaseApp
}
//line demo/longruntool/longrun_mtest.gox:1
func (this *case_longrun) Main() {
//line demo/longruntool/longrun_mtest.gox:1:1
	this.Mock(new(MCPApp))
//line demo/longruntool/longrun_mtest.gox:3:1
	this.Initialize(nil)
//line demo/longruntool/longrun_mtest.gox:4:1
	this.RetWith(map[string]interface{}{})
//line demo/longruntool/longrun_mtest.gox:6:1
	this.OnNotify__0("notifications/progress", func(params map[string]any) {
//line demo/longruntool/longrun_mtest.gox:7:1
		mtest.Dump(params)
	})
//line demo/longruntool/longrun_mtest.gox:10:1
	this.Call__1("longRunningOperation", map[string]any{"duration": 1, "steps": 3}, map[string]any{"progressToken": 1})
//line demo/longruntool/longrun_mtest.gox:16:1
	this.RetWith(map[string][]map[string]string{"content": []map[string]string{map[string]string{"text": "Long running operation completed. Duration: 1 seconds, Steps: 3.", "type": "text"}}})
//line demo/longruntool/longrun_mtest.gox:25:1
	this.Call__0("longRunningOperation", map[string]any{"duration": 1})
//line demo/longruntool/longrun_mtest.gox:28:1
	this.RetWith(map[string][]map[string]string{"content": []map[string]string{map[string]string{"text": "Long running operation completed. Duration: 1 seconds, Steps: 5.", "type": "text"}}})
}
func Test_longrun(t *testing.T) {
	mtest.Gopt_CaseApp_TestMain(new(case_longrun), t)
}
