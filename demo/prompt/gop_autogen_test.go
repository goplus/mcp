// Code generated by gop (Go+); DO NOT EDIT.

package main

import (
	"github.com/goplus/mcp/mtest"
	"testing"
)

type case_code_review struct {
	mtest.CaseApp
}
type case_greeting struct {
	mtest.CaseApp
}
//line demo/prompt/code_review_mtest.gox:1
func (this *case_code_review) Main() {
//line demo/prompt/code_review_mtest.gox:1:1
	this.TestServer__0(new(MCPApp))
//line demo/prompt/code_review_mtest.gox:3:1
	this.Initialize(nil)
//line demo/prompt/code_review_mtest.gox:4:1
	this.RetWith(map[string]interface{}{})
//line demo/prompt/code_review_mtest.gox:6:1
	this.Prompt("codeReview", map[string]any{"prNumber": "123"})
//line demo/prompt/code_review_mtest.gox:7:1
	this.RetWith(map[string]interface{}{"description": "Code review assistance", "messages": []map[string]interface{}{map[string]interface{}{"content": map[string]string{"text": "You are a helpful code reviewer. Review the changes and provide constructive feedback.", "type": "text"}, "role": "user"}, map[string]interface{}{"content": map[string]interface{}{"resource": map[string]string{"mimeType": "text/x-diff", "text": "diff", "uri": "git://pulls/123/diff"}, "type": "resource"}, "role": "assistant"}}})
}
//line demo/prompt/greeting_mtest.gox:1
func (this *case_greeting) Main() {
//line demo/prompt/greeting_mtest.gox:1:1
	this.Mock(new(MCPApp))
//line demo/prompt/greeting_mtest.gox:3:1
	this.Initialize(nil)
//line demo/prompt/greeting_mtest.gox:4:1
	this.RetWith(map[string]interface{}{})
//line demo/prompt/greeting_mtest.gox:6:1
	this.Prompt("greeting", map[string]any{"name": "Ken"})
//line demo/prompt/greeting_mtest.gox:7:1
	this.RetWith(map[string]interface{}{"description": "A friendly greeting", "messages": []map[string]interface{}{map[string]interface{}{"content": map[string]string{"text": "Hello, Ken! How can I help you today?", "type": "text"}, "role": "assistant"}}})
}
func Test_code_review(t *testing.T) {
	mtest.Gopt_CaseApp_TestMain(new(case_code_review), t)
}
func Test_greeting(t *testing.T) {
	mtest.Gopt_CaseApp_TestMain(new(case_greeting), t)
}
