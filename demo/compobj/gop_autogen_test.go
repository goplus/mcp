// Code generated by xgo (XGo); DO NOT EDIT.

package main

import (
	"github.com/goplus/mcp/mtest"
	"testing"
)

type case_compobj struct {
	mtest.CaseApp
}
//line demo/compobj/compobj_mtest.gox:1
func (this *case_compobj) Main() {
//line demo/compobj/compobj_mtest.gox:1:1
	this.Mock(new(MCPApp))
//line demo/compobj/compobj_mtest.gox:3:1
	this.Initialize(nil)
//line demo/compobj/compobj_mtest.gox:4:1
	this.RetWith(map[string]interface{}{})
//line demo/compobj/compobj_mtest.gox:6:1
	this.List__0("tools")
//line demo/compobj/compobj_mtest.gox:7:1
	this.RetWith(map[string][]map[string]interface{}{"tools": []map[string]interface{}{map[string]interface{}{"name": "compositeObject", "description": "A composite object tool", "inputSchema": map[string]interface{}{"type": "object", "properties": map[string]interface{}{"name": map[string]string{"description": "User name", "type": "string"}, "profile": map[string]interface{}{"description": "User profile", "type": "object", "properties": map[string]interface{}{"age": map[string]string{"type": "number"}, "works": map[string]interface{}{"description": "Work experience", "type": "array", "items": map[string]interface{}{"type": "object", "properties": map[string]map[string]string{"company": map[string]string{"description": "Company name", "type": "string"}, "end": map[string]string{"description": "End time", "type": "string"}, "start": map[string]string{"description": "Start time", "type": "string"}}}}}}}, "required": []string{"name", "profile"}}}}})
//line demo/compobj/compobj_mtest.gox:59:1
	this.Call__0("compositeObject", map[string]any{"name": "Ken", "profile": map[string]interface{}{"age": 25, "works": []map[string]string{map[string]string{"company": "Go+ Limited", "start": "2020-5-23"}}}})
//line demo/compobj/compobj_mtest.gox:68:1
	this.Send()
//line demo/compobj/compobj_mtest.gox:69:1
	mtest.Dump(this.Resp())
}
func Test_compobj(t *testing.T) {
	mtest.Gopt_CaseApp_TestMain(new(case_compobj), t)
}
